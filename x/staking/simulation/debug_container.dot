digraph "" {
    subgraph "cluster_auth" {
      graph [fontsize="12.0", label="Module: auth", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_bank" {
      graph [fontsize="12.0", label="Module: bank", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_consensus" {
      graph [fontsize="12.0", label="Module: consensus", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_distribution" {
      graph [fontsize="12.0", label="Module: distribution", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_genutil" {
      graph [fontsize="12.0", label="Module: genutil", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_mint" {
      graph [fontsize="12.0", label="Module: mint", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_params" {
      graph [fontsize="12.0", label="Module: params", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/params.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_runtime" {
      graph [fontsize="12.0", label="Module: runtime", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideApp"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideDeliverTx"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_slashing" {
      graph [fontsize="12.0", label="Module: slashing", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_staking" {
      graph [fontsize="12.0", label="Module: staking", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_tx" {
      graph [fontsize="12.0", label="Module: tx", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

  "*cosmossdk.io/api/cosmos/app/runtime/v1alpha1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/app/v1alpha1.Config"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/auth/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/bank/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/consensus/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/distribution/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/genutil/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/mint/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/params/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/slashing/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/staking/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/tx/config/v1.Config"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cascadiafoundation/cascadia/x/staking/keeper.Keeper"[color="red", fontcolor="red", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/baseapp.MsgServiceRouter"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino"[color="black", fontcolor="black", penwidth="1.5"];
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder"[color="black", fontcolor="black", penwidth="1.5"];
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey"[color="black", fontcolor="black", penwidth="1.5"];
  "*github.com/cosmos/cosmos-sdk/store/types.MemoryStoreKey"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/store/types.TransientStoreKey"[color="black", fontcolor="black", penwidth="1.5"];
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "[]github.com/cosmos/cosmos-sdk/x/gov/types/v1beta1.HandlerRoute"[color="lightgrey", comment="many-per-container", fontcolor="dimgrey", penwidth="0.5"];
  "[]runtime.BaseAppOption"[color="lightgrey", comment="many-per-container", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/core/appconfig.Compose"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
  "cosmossdk.io/depinject.ModuleKey"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/depinject.OwnModuleKey"[color="black", fontcolor="black", penwidth="1.5"];
  "func() types.AccountI"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "func(types.RequestDeliverTx) types.ResponseDeliverTx"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/client.TxConfig"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/codec.Codec"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/codec.ProtoCodecMarshaler"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration"[color="red", fontcolor="red", penwidth="0.5", shape="hexagon"];
  "github.com/cosmos/cosmos-sdk/x/auth/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/bank/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.Keeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/bank/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/consensus/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/keeper.Keeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/feegrant/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/keeper.Keeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/params/keeper.Keeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/slashing/exported.Subspace"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/slashing/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/staking/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/staking/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/staking/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "map[string]cosmossdk.io/core/appmodule.AppModule"[color="lightgrey", comment="one-per-module", fontcolor="dimgrey", penwidth="0.5"];
  "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable"[color="black", comment="one-per-module", fontcolor="black", penwidth="1.5"];
  "map[string]github.com/cosmos/cosmos-sdk/x/staking/types.StakingHooksWrapper"[color="lightgrey", comment="one-per-module", fontcolor="dimgrey", penwidth="0.5"];
  "types.InflationCalculationFn"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "types.RandomGenesisAccountsFn"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/app/v1alpha1.Config";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/app/runtime/v1alpha1.Module";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "github.com/cosmos/cosmos-sdk/codec.Codec";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "github.com/cosmos/cosmos-sdk/codec.ProtoCodecMarshaler";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "*github.com/cosmos/cosmos-sdk/baseapp.MsgServiceRouter";
  "*cosmossdk.io/api/cosmos/app/runtime/v1alpha1.Module" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey" -> "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey" -> "*github.com/cosmos/cosmos-sdk/store/types.TransientStoreKey";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey" -> "*github.com/cosmos/cosmos-sdk/store/types.MemoryStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideDeliverTx";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideDeliverTx" -> "func(types.RequestDeliverTx) types.ResponseDeliverTx";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/auth/module/v1.Module";
  "*cosmossdk.io/api/cosmos/auth/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "types.RandomGenesisAccountsFn" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "func() types.AccountI" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper";
  "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/bank/module/v1.Module";
  "*cosmossdk.io/api/cosmos/bank/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper";
  "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/staking/module/v1.Module";
  "*cosmossdk.io/api/cosmos/staking/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/staking/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule" -> "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/slashing/module/v1.Module";
  "*cosmossdk.io/api/cosmos/slashing/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/slashing/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/slashing/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule" -> "map[string]github.com/cosmos/cosmos-sdk/x/staking/types.StakingHooksWrapper";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/params/module/v1.Module";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.TransientStoreKey" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/params/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideModule" -> "[]github.com/cosmos/cosmos-sdk/x/gov/types/v1beta1.HandlerRoute";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace";
  "github.com/cosmos/cosmos-sdk/x/params/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace";
  "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace" -> "github.com/cosmos/cosmos-sdk/x/params/types.Subspace";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/consensus/module/v1.Module";
  "*cosmossdk.io/api/cosmos/consensus/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/consensus/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule" -> "[]runtime.BaseAppOption";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/tx/config/v1.Config";
  "*cosmossdk.io/api/cosmos/tx/config/v1.Config" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.ProtoCodecMarshaler" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/feegrant/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule" -> "github.com/cosmos/cosmos-sdk/client.TxConfig";
  "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule" -> "[]runtime.BaseAppOption";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/genutil/module/v1.Module";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "func(types.RequestDeliverTx) types.ResponseDeliverTx" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "github.com/cosmos/cosmos-sdk/client.TxConfig" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/mint/module/v1.Module";
  "cosmossdk.io/depinject.OwnModuleKey" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "*cosmossdk.io/api/cosmos/mint/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "types.InflationCalculationFn" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/mint/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/core/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/distribution/module/v1.Module";
  "*cosmossdk.io/api/cosmos/distribution/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/distribution/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule" -> "map[string]github.com/cosmos/cosmos-sdk/x/staking/types.StakingHooksWrapper";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration";
  "github.com/cosmos/cosmos-sdk/x/mint/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration";
  "github.com/cosmos/cosmos-sdk/x/distribution/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration";
  "*github.com/cascadiafoundation/cascadia/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/testutil/sims.SetupWithConfiguration";
}

